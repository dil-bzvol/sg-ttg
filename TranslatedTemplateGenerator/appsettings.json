{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "NLog": {
    "AutoReload": false,
    "Extensions": [
      { "assembly": "NLog.Web.AspNetCore" },
      { "assembly": "NLog.DiagnosticSource" }
//      { "assembly": "Diligent.Libraries.OpenTelemetry.Extensions.NLog" }
    ],
    "Rules": [
      {
        "Logger": "Microsoft.*",
        "FinalMinLevel": "Error"
      },
      {
        "Logger": "System.*",
        "FinalMinLevel": "Error"
      },
      {
        "Logger": "Microsoft.AspNetCore.Authorization.DefaultAuthorizationService",
        "FinalMinLevel": "Off"
      },
      {
        "Logger": "Microsoft.AspNetCore.Cors.Infrastructure.CorsService",
        "FinalMinLevel": "Off"
      },
      {
        "Logger": "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker",
        "FinalMinLevel": "Off"
      },
      {
        "Logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor",
        "FinalMinLevel": "Off"
      },
      {
        "Logger": "Microsoft.AspNetCore.WebHost",
        "FinalMinLevel": "Off"
      },
      {
        "Logger": "Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware",
        "FinalMinLevel": "Off"
      },
      {
        "Logger": "Microsoft.AspNetCore.Routing.Matching.DfaMatcher",
        "FinalMinLevel": "Off"
      },
      {
        "Logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker",
        "FinalMinLevel": "Off"
      },
      {
        "Logger": "Identity.IdentityServer4.Integration.Hosting.InternalEndpointRouter",
        "FinalMinLevel": "Off"
      },
      {
        "Logger": "*LogicalHandler",
        "FinalMinLevel": "Off"
      },
      {
        "Logger": "*",
        "MinLevel": "${MinLevel}",
        "WriteTo": "${Target}",
        "FilterDefaultAction": "Neutral",
        "Filters": [
          {
            "Type": "When",
            "Condition": "contains('${aspnet-request-url}', '/check') and level < LogLevel.Warn",
            "Action": "Ignore"
          }
        ]
      }
    ],
    "Targets": {
      "Console": {
        "Layout": "${longdate:universalTime=True}|${mdlc:correlationId}|${level:upperCase=true}|${aspnet-request-url:IncludeScheme=false:IncludeHost=false}|${aspnet-request-method}|${logger}|${message}|${exception:format=tostring}|${activity:property=SpanId}|${activity:property=TraceId}",
        "Type": "Console"
      },
      "JsonConsole": {
        "Layout": {
          "Attributes": [
            {
              "Layout": "${longdate:universalTime=True}",
              "Name": "time"
            },
            {
              "Layout": "${mdlc:correlationId}",
              "Name": "correlationId"
            },
            {
              "Layout": "${level:upperCase=true}",
              "Name": "level"
            },
            {
              "Layout": "${logger}",
              "Name": "logger"
            },
            {
              "Layout": "${activity:property=SpanId}",
              "Name": "activityId"
            },
            {
              "Layout": "${activity:property=TraceId}",
              "Name": "traceId"
            },
            {
              "Layout": "${threadid}",
              "Name": "threadId"
            },
            {
              "Layout": "${aspnet-request-url:IncludeScheme=false:IncludeHost=false}",
              "Name": "url"
            },
            {
              "Layout": "${aspnet-request-method}",
              "Name": "method"
            },
            {
              "Layout": "${message}",
              "Name": "message"
            },
            {
              "Layout": "${message:raw=true}",
              "Name": "rawMessage"
            },
            {
              "Encode": false,
              "Layout": {
                "IncludeAllProperties": true,
                "MaxRecursionLimit": "5",
                "RenderEmptyObject": false,
                "Type": "JsonLayout"
              },
              "Name": "properties"
            },
            {
              "Layout": {
                "Attributes": [
                  {
                    "Layout": "${exception:format=type}",
                    "Name": "type"
                  },
                  {
                    "Layout": "${exception:format=message}",
                    "Name": "message"
                  },
                  {
                    "Layout": "${exception:format=tostring}",
                    "Name": "stacktrace"
                  }
                ],
                "RenderEmptyObject": false,
                "Type": "JsonLayout"
              },
              "Name": "exception"
            },
            /*{
              "Layout": "${opentelemetry-enduser-id}",
              "Name": "enduser.id"
            },
            {
              "Layout": "${opentelemetry-enduser-tenant}",
              "Name": "enduser.tenant"
            }*/
          ],
          "Type": "JsonLayout"
        },
        "Type": "Console"
      }
    },
    "ThrowConfigExceptions": true,
    "Variables": {
      "MinLevel": "Info",
      "Target": "JsonConsole"
    }
  }
}
